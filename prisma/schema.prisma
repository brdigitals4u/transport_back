generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model my_forms {
  formid            String              @id @db.VarChar(50)
  title             String?             @db.VarChar(255)
  type              String?             @db.VarChar(50)
  module            String?             @db.VarChar(50)
  pkeys             String?             @db.VarChar(255)
  pkeyid            String?             @db.VarChar(100)
  dbtable           String?             @db.VarChar(100)
  model             String?             @db.VarChar(100)
  orderby           String?             @db.VarChar(100)
  extra_props       String?             @db.VarChar(255)
  readonly          Int?                @db.SmallInt
  colsize           String?             @db.VarChar(10)
  classes           String?             @db.VarChar(255)
  hint              String?
  sortno            Int?                @db.SmallInt
  active            Int?                @default(1) @db.SmallInt
  formview          String?             @db.VarChar(100)
  formfilter        String?             @db.VarChar(100)
  description       String?
  formgroup         String?             @db.VarChar(255)
  icon              String?             @db.VarChar(30)
  my_forms_columns  my_forms_columns[]
  my_forms_sections my_forms_sections[]
}

model my_forms_columns {
  formid        String   @db.VarChar(50)
  sectionid     String?  @db.VarChar(50)
  field         String   @db.VarChar(100)
  title         String?  @db.VarChar
  colsize       String?  @db.VarChar(30)
  type          String?  @db.VarChar(30)
  component     String?  @db.VarChar(128)
  required      Int?     @db.SmallInt
  sortno        Int?     @db.SmallInt
  active        Int?     @default(1) @db.SmallInt
  formview      Int?     @default(1) @db.SmallInt
  listview      Int?     @default(1) @db.SmallInt
  selectqry     String?
  options       Json?
  defaultvalue  Json?
  addattrs      Json?
  readonly      Int?     @db.SmallInt
  hidden        Int?     @db.SmallInt
  classes       String?  @db.VarChar(255)
  inline        Int?     @db.SmallInt
  placeholder   String?  @db.VarChar(255)
  hint          String?
  dt_width      String?  @db.VarChar(10)
  dt_sortable   Int?     @default(1) @db.SmallInt
  dt_callback   String?  @db.VarChar(100)
  dt_class      String?  @db.VarChar(100)
  dt_rander     String?
  dt_rowgroup   Int?     @db.SmallInt
  dt_filter     Int?     @default(1) @db.SmallInt
  dbfield       Int?     @default(1) @db.SmallInt
  info          String?  @db.VarChar
  title_lng     String?  @db.VarChar
  printview     Int?     @db.SmallInt
  printview_spl Int?     @default(0) @db.SmallInt
  my_forms      my_forms @relation(fields: [formid], references: [formid], onDelete: NoAction, onUpdate: NoAction)

  @@id([formid, field])
}

model my_forms_sections {
  formid         String    @db.VarChar(50)
  sectionid      String    @db.VarChar(50)
  title          String?   @db.VarChar(255)
  readonly       Int?      @db.SmallInt
  colsize        String?   @db.VarChar(30)
  classes        String?   @db.VarChar(255)
  hint           String?
  sortno         Int?      @db.SmallInt
  active         Int?      @default(1) @db.SmallInt
  my_formsFormid String?   @db.VarChar(50)
  my_forms       my_forms? @relation(fields: [my_formsFormid], references: [formid])

  @@id([formid, sectionid])
}

model user {
  id        Int       @id @default(autoincrement())    
  name      String
  email     String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  role      Role
}

model carrier {
  id                   Int      @id @default(autoincrement())
  name                 String?
  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
  address              String?
  address_line_2       String?
  authority_type       String?
  cargo__limit         String?
  cargo_agent          String?
  cargo_agent_phone    String?
  cargo_city           String?
  cargo_company_name   String?
  cargo_deductable     String?
  cargo_email          String?
  cargo_expiration     String?
  cargo_note           String?
  cargo_phone          String?
  cargo_policy         String?
  cargo_state          String?
  cargo_zip_code       String?
  custom_carrier_id    String?
  dba_name             String?
  dot                  String?
  email_address        String?
  fed_tax_id           String?
  highway_id           String?
  manage_copmliance    String?
  manage_expense       String?
  manage_maintenance   String?
  manage_settlements   String?
  manage_sourcing      String?
  mc                   String?
  mcpio                String?
  note                 String?
  partner              String?
  phone                String?
  primary_agent        String?
  primary_agent_phone  String?
  primary_city         String?
  primary_company_name String?
  primary_deductable   String?
  primary_email        String?
  primary_expiration   String?
  primary_limit        String?
  primary_note         String?
  primary_phone        String?
  primary_policy       String?
  primary_state        String?
  primary_zip_code     String?
  registration         String?
  rmisd                String?
  scac_code            String?
  service_type         String?
  state                String?
  status               String?
  use_factoring        String?
  website              String?
  zipcode              String?
  city                 String?
  user_id               Int?
  //load                 load[]
}

model trailer {
  id                       Int      @id @default(autoincrement())
  type                     String?
  model                    String?
  make                     String?
  vin                      String?
  status                   String?
  plate_number             String?
  gvwr                     String?
  length                   String?
  carrier_name             String?
  policy_no                String?
  provider                 String?
  policy_year              String?
  policy_exp               String?
  state_of_registration    String?
  width                    String?
  height                   String?
  ownership_type           String?
  color                    String?
  braking_system           String?
  dot_certification_number String?
  tracking_gps             String?
  cargo_type               String?
  expiry_year              String?
  createdAt                DateTime @default(now())
  updatedAt                DateTime @updatedAt
}

model trailertype {
  id        Int      @id @default(autoincrement())
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model drivers {
  id                         Int      @id @default(autoincrement())
  name                       String?
  dob                        String?
  gender                     String?
  contact_number             String?
  email                      String?
  street_address             String?
  city                       String?
  state                      String?
  zip_code                   String?
  country                    String?
  license_number             String?
  license_expiry_date        String?
  license_type               String?
  certifications             String?
  vehicle_assigned           String?
  employment_type            String?
  doj                        String?
  shift_schedule             String?
  manager_supervisor_id      String?
  medical_certificate_expiry String?
  background_check_status    String?
  drug_test_status           String?
  createdAt                  DateTime @default(now())
  updatedAt                  DateTime @updatedAt
  //load                       load[]
}

model menus {
  id          Int     @id @default(autoincrement())
  name        String  @db.VarChar(255)
  path        String? @db.VarChar(255)
  icon        String? @db.VarChar(255)
  parent_id   Int?
  roles       Json    @db.Json
  sort        Int?
  menus       menus?  @relation("menusTomenus", fields: [parent_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  other_menus menus[] @relation("menusTomenus")
}

model vehicle {
  id           Int      @id @default(autoincrement())
  vehiclename  String   @db.VarChar(255)
  vehiclemodel String   @db.VarChar(255)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model city {
  id           Int     @id @default(autoincrement())
  name         String
  state_id     Int
  state_code   String?
  country_id   Int
  country_code String?
  latitude     Decimal
  longitude    Decimal
  created_at   String?
  updated_at   String?
  flag         Boolean @default(true)
  wikiDataId   String?
  country      country @relation(fields: [country_id], references: [id])
  state        state   @relation(fields: [state_id], references: [id])
}

model country {
  id              Int       @id @default(autoincrement())
  name            String    @unique
  iso3            String?
  numeric_code    String?
  iso2            String?
  phonecode       String?
  capital         String?
  currency        String?
  currency_name   String?
  currency_symbol String?
  tld             String?
  native          String?
  regionId        Int?
  subregion_id    Int?
  nationality     String?
  timezones       String?
  translations    String?
  latitude        Decimal?
  longitude       Decimal?
  emoji           String?
  emojiU          String?
  created_at      DateTime?
  updated_at      DateTime
  flag            Boolean   @default(true)
  wikiDataId      String?
  subreligion     String?
  city            city[]
}

model state {
  id           Int       @id @default(autoincrement())
  name         String
  country_id   Int
  country_code String?
  fips_code    String?
  iso2         String?
  type         String?
  latitude     Decimal?
  longitude    Decimal?
  created_at   DateTime?
  updated_at   DateTime
  flag         Boolean   @default(true)
  wikiDataId   String?
  city         city[]
}

model loadorders {
  id                             Int      @id @default(autoincrement())
  client_name                    String?
  client_company_name            String?
  client_email                   String?
  client_phone                   String?
  client_billing_address         String?
  client_billing_city            String?
  client_billing_state           String?
  client_type_of_load            String?
  client_cargo_description       String?
  client_weight                  String?
  client_weight_type             String?
  client_number_of_pallets       String?
  client_hazardous_materials     String?
  client_pickup_address          String?
  client_pickup_city             String?
  client_pickup_state            String?
  client_pickup_zip_code         String?
  client_pickup_date             String?
  client_contact_person_pickup   String?
  client_pickup_contact_phone    String?
  client_delivery_address        String?
  client_delivery_city           String?
  client_delivery_state          String?
  client_delivery_zip_code       String?
  client_delivery_date           String?
  client_contact_person_delivery String?
  client_delivery_contact_phone  String?
  cleint_special_instructions    String?
  createdAt                      DateTime @default(now())
  updatedAt                      DateTime @updatedAt

  //carrier carrier? @relation(fields: [carrier_id], references: [id], onDelete: SetNull)
  //driver  drivers? @relation(fields: [driver_id], references: [id], onDelete: SetNull)
}

model load {
  id                Int        @id @default(autoincrement())
  load_number       String     @unique @db.VarChar(50) // Unique Load Number
  carrier_id        String? // Associated Carrier
  driver_id         String? // Assigned Driver (Initially NULL)
  pickup_date       String?
  pickup_location   String?    @db.VarChar(255)
  pick_city         String?
  pick_state        String?
  delivery_location String?    @db.VarChar(255)
  delivery_date     String?
  deli_city         String?
  deli_state        String?
  weight            Decimal
  freight_type      String?    @db.VarChar(50) // e.g., Dry Van, Refrigerated, Flatbed
  status            LoadStatus @default(PENDING)
  //rate              Decimal? // Agreed rate for the load
  additional_notes  String?
  createdAt         DateTime   @default(now())
  updatedAt         DateTime   @updatedAt

  //carrier carrier? @relation(fields: [carrier_id], references: [id], onDelete: SetNull)
  //driver  drivers? @relation(fields: [driver_id], references: [id], onDelete: SetNull)
}

enum LoadStatus {
  PENDING // Load is created but not yet assigned
  ASSIGNED // Load assigned to a driver
  IN_TRANSIT // Driver has picked up the load
  DELIVERED // Load delivered successfully
  CANCELED // Load canceled
}

enum Role {
  ADMIN
  MANAGER
  DRIVER
  SHIPPER
  CUSTOMER
  CARRIER
}
